/*
문제 풀이.
*/

/*
Quest 1.
1. compareNumbers 라는 함수를 선언하고, 2개의 매개변수(숫자 타입) 를 지정합니다.
2. 조건1 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 할당되지 않은 경우, 아래와 같이 console 에 출력되도록 작성합니다.
----------
두번째 매개변수의 값을 찾을 수 없습니다.
----------
3. 값이 할당된 경우 4(순서)에 이어서 작성합니다.
4. 조건2 : 첫번째 매개변수의 전달인자 값과 두번째 매개변수의 전달인자 값을 비교하여 크거나 같은 경우, 아래와 같이 console 에 출력되도록 작성합니다.
----------
첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.
----------
5. 작은 경우 아래와 같이 console 에 출력되도록 작성합니다.
----------
첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.
----------
6.  1(순서) 함수에 각 매개변수를 지정하여 호출합니다.
 
----------
함수 호출)

compareNumbers(10) 를 호출한 경우 : "두번째 매개변수의 값을 찾을 수 없습니다."

compareNumbers(20, 10) 를 호출한 경우 : "첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다."

compareNumbers(10, 20) 를 호출한 경우 : "첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다."
----------
*/
// Answer 1.
function compareNumbers(a, b){
    if(typeof b === "undefined"){
        console.log("두번째 매개변수의 값을 찾을 수 없습니다.")
    }
    if(a >= b){
        console.log("첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.")
    }
    if(a < b){
        console.log("첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.")
    }
};
compareNumbers(10); //두번째 매개변수의 값을 찾을 수 없습니다.

compareNumbers(20, 10); //첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.

compareNumbers(10, 20); //첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.

// compareNumbers(3, 5); //첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.


/*
Quest 2.
1. getTotal 이라는 함수를 선언하고, 2개의 매개변수(첫번째는 숫자 타입, 두번째는 문자 타입)를 지정합니다.
2. 조건 1-1 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 "add" 인 경우, 숫자 1 부터 첫번째 매개변수의 전달인자 값까지 모두 덧셈 연산하여 결과값을 반환합니다.
3. 조건 1-2 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 "multiply" 인 경우, 숫자 1 부터 첫번째 매개변수의 전달인자 값까지 모두 곱셈 연산하여 결과값을 반환합니다.
4. 조건 1-3 : 1(순서) 함수가 호출될 때, 모든 조건(1-1, 1-2)이 아닌 경우, 결과값 숫자 0 을 반환합니다.
5. 새로운 변수를 생성, 1(순서) 함수에 매개변수를 지정하여 호출하고 값을 반환받습니다.
6. 5(순서) 변수의 값을 console 에 출력합니다.

----------
함수 호출 예시)

getTotal(5, "add") 를 호출하여 반환하고 변수를 출력한 결과값 : 15
getTotal(10, "add") 를 호출하여 반환하고 변수를 출력한 결과값 : 55

getTotal(5, "multiply") 를 호출하여 반환하고 변수를 출력한 결과값 : 120
getTotal(10, "multiply") 를 호출하여 반환하고 변수를 출력한 결과값 : 3628800

getTotal(100) 를 호출하여 반환하고 변수를 출력한 결과값 : 0
----------
*/
// Answer 2.
function getTotal(x, y){
    var sum = 0;
    if(y === "add"){
        for(var i = 0; i <= x; i++){
            sum = sum + i;
        }
    }else if(y === "multiply"){
        var sum = 1; // 초기값이 0이면 무엇을 곱해도 0이기 때문에 다시 설정.
        for(var i = 1; i <= x; i++){
            sum = sum * i;
        }
    }else{
        sum = 0;
    }
    return sum;
};
var _1 = getTotal(5, "add"); 
var _2 = getTotal(10, "add");

var _3 = getTotal(5, "multiply");
var _4 = getTotal(10, "multiply"); 

var _5 = getTotal(100); 

console.log(_1); // 15
console.log(_2); // 55
console.log(_3); // 120
console.log(_4); // 3628800
console.log(_5); // 0

/*
Quest 3.
1. getMaxValue 이라는 함수를 선언하고, 1개의 매개변수(배열 타입)를 지정합니다.
2. 1(순서) 함수에 전달된 매개변수 배열 원소들의 숫자 값들을 비교하여 숫자가 가장 큰 경우, 1(순서) 배열에서 해당된 순서를 결과값으로 반환합니다.
3. 새로운 변수를 생성, 1(순서) 함수에 매개변수를 지정하여 호출하고 값을 반환받습니다.
4. 3(순서) 변수의 값을 console 에 출력합니다.
* 매개변수 배열에는 숫자 이외의 타입도 할당되어 있습니다.

----------
함수 호출 예시)

getMaxValue([10, -4, 7, 100, "hello", -50]) 를 호출하여 반환하고 변수를 출력한 결과값 : 3

getMaxValue([-400, "world", 60, 0, {}, 1000]) 를 호출하여 반환하고 변수를 출력한 결과값 : 5
----------
*/
// Answer 3.
function getMaxValue(z){
    var max = z[0];
    var num = 0;
    for(var i = 0; i < z.length; i++){
        if(max < z[i]){ // max(z[0])의 값이 z[i]의 값(for문 사용으로인해 0부터 z배열의 길이만큼 점점 커진다)보다 작으면
            max = z[i]; // 최대값 저장
            num = i; // 배열의 제일 큰 값의 순서를 저장
        }
    }
    return num;
};
var _6 = getMaxValue([10, -4, 7, 100, "hello", -50]);
console.log(_6); // 3

var _7 = getMaxValue([-400, "world", 60, 0, {}, 1000]);
console.log(_7); // 5

// var _8 = getMaxValue([ 40, 500, -2, 416, "d", 99999]);
// console.log(_8); // 5

// var _9 = getMaxValue(["programming", 40, 500, -2, 416, "d", 99999]);
// console.log(_9); // 0
// 배열에서 문자열을 첫번째에 넣었더니 0이 출력되었는데 이유가 궁금합니다!

// rh : (* 매개변수 배열에는 숫자 이외의 타입도 할당되어 있습니다.) - 문제 출제시 이런 문구를 작성한 의도에 부합되는 좋은 질문입니다:)
// 문자열과 숫자를 비교할 때, 숫자가 문자열로 인식해서 비교되기 때문에 그 다음의 반복 구문부터는 뒤에 따라오는 값들이 숫자라고 해도 문자열 비교로 진행됩니다.
// 그래서 이 문제를 해결하려면 반복문 안에서 최대값을 비교하기 전에 비교 대상이 숫자타입인지를 먼저 찾고 비교할 수 있도록 되어야 하겠습니다.
// - 그럼 잘 확인해보고 방법을 강구하여 99999 의 순서로 나올 수 있도록 해결해보길 바랍니다~!