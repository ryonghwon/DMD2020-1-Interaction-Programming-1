/*
문제 풀이.
*/

/*
Quest 1.
1. compareNumbers 라는 함수를 선언하고, 2개의 매개변수(숫자 타입) 를 지정합니다.
2. 조건1 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 할당되지 않은 경우, 아래와 같이 console 에 출력되도록 작성합니다.
----------
두번째 매개변수의 값을 찾을 수 없습니다.
----------
3. 값이 할당된 경우 4(순서)에 이어서 작성합니다.
4. 조건2 : 첫번째 매개변수의 전달인자 값과 두번째 매개변수의 전달인자 값을 비교하여 크거나 같은 경우, 아래와 같이 console 에 출력되도록 작성합니다.
----------
첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.
----------
5. 작은 경우 아래와 같이 console 에 출력되도록 작성합니다.
----------
첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.
----------
6.  1(순서) 함수에 각 매개변수를 지정하여 호출합니다.
 
----------
함수 호출)
compareNumbers(10) 를 호출한 경우 : "두번째 매개변수의 값을 찾을 수 없습니다."
compareNumbers(20, 10) 를 호출한 경우 : "첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다."
compareNumbers(10, 20) 를 호출한 경우 : "첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다."
----------
*/

// Answer 1.
//compareNumbers라는 함수를 선언하고, 숫자 타입 매개 변수를 두 개 지정합니다.
function compareNumbers (one, two) {
    //두번째 매개변수의 전달인자 값이 할당되지 않은 경우
    if (typeof two === 'undefined') {
        console.log("두번째 매개변수의 값을 찾을 수 없습니다.");
    }
    //첫번째 매개변수의 전달인자 값과 두번째 매개변수의 전달인자 값을 비교하여 크거나 같은 경우
    else if (one >= two) {
        console.log("첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.");
    }
    //작은 경우
    else if (one < two) {
        console.log("첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.");
    }
}
    //함수에 각 매개변수를 지정하여 호출
    compareNumbers (10); //"두번째 매개변수의 값을 찾을 수 없습니다."
    compareNumbers (20, 10); //"첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다."
    compareNumbers (10, 20); //"첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다."



/*
Quest 2.
1. getTotal 이라는 함수를 선언하고, 2개의 매개변수(첫번째는 숫자 타입, 두번째는 문자 타입)를 지정합니다.
2. 조건 1-1 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 "add" 인 경우, 숫자 1 부터 첫번째 매개변수의 전달인자 값까지 모두 덧셈 연산하여 결과값을 반환합니다.
3. 조건 1-2 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 "multiply" 인 경우, 숫자 1 부터 첫번째 매개변수의 전달인자 값까지 모두 곱셈 연산하여 결과값을 반환합니다.
4. 조건 1-3 : 1(순서) 함수가 호출될 때, 모든 조건(1-1, 1-2)이 아닌 경우, 결과값 숫자 0 을 반환합니다.
5. 새로운 변수를 생성, 1(순서) 함수에 매개변수를 지정하여 호출하고 값을 반환받습니다.
6. 5(순서) 변수의 값을 console 에 출력합니다.
----------
함수 호출 예시)
getTotal(5, "add") 를 호출하여 반환하고 변수를 출력한 결과값 : 15
getTotal(10, "add") 를 호출하여 반환하고 변수를 출력한 결과값 : 55
getTotal(5, "multiply") 를 호출하여 반환하고 변수를 출력한 결과값 : 120
getTotal(10, "multiply") 를 호출하여 반환하고 변수를 출력한 결과값 : 3628800
getTotal(100) 를 호출하여 반환하고 변수를 출력한 결과값 : 0
----------
*/

// Answer 2.
//getTotal 이라는 함수를 선언하고, 2개의 매개변수(첫번째는 숫자 타입, 두번째는 문자 타입)를 지정
function getTotal (num, string) {
    //매개변수의 전달인자 값이 "add" 인 경우
    if (string === "add"){
        var sum = 0;
        for (var a = 1; a <= num; a++){
            //1부터 첫번째 매개변수의 전달인자 값까지 모두 덧셈 연산
            sum = sum + a;
        }
    }
    ////매개변수의 전달인자 값이 "multiply" 인 경우
    else if (string === "multiply"){
        var sum = 1;
        for (var a = 1; a <= num; a++){
            //1부터 첫번째 매개변수의 전달인자 값까지 모두 곱셈 연산
            sum = sum * a;
        }
    }
    else{
        //모든 조건이 아닌 경우 0
        sum = 0;
    }
    //결과값을 반환
    return sum;
}

//새로운 변수를 생성, 함수에 매개변수를 지정하여 호출하고 값을 반환
var sum1 = getTotal(5, "add");
    sum2 = getTotal(10, "add");
    sum3 = getTotal(5, "multiply");
    sum4 = getTotal(10, "multiply");
    sum5 = getTotal(100);

    //변수의 값을 console에 출력
    console.log(sum1); //15
    console.log(sum2); //55
    console.log(sum3); //120
    console.log(sum4); //3628800
    console.log(sum5); //0


    
/*
Quest 3.
1. getMaxValue 이라는 함수를 선언하고, 1개의 매개변수(배열 타입)를 지정합니다.
2. 1(순서) 함수에 전달된 매개변수 배열 원소들의 숫자 값들을 비교하여 숫자가 가장 큰 경우, 1(순서) 배열에서 해당된 순서를 결과값으로 반환합니다.
3. 새로운 변수를 생성, 1(순서) 함수에 매개변수를 지정하여 호출하고 값을 반환받습니다.
4. 3(순서) 변수의 값을 console 에 출력합니다.
* 매개변수 배열에는 숫자 이외의 타입도 할당되어 있습니다.
----------
함수 호출 예시)
getMaxValue([10, -4, 7, 100, "hello", -50]) 를 호출하여 반환하고 변수를 출력한 결과값 : 3
getMaxValue([-400, "world", 60, 0, {}, 1000]) 를 호출하여 반환하고 변수를 출력한 결과값 : 5
----------
*/

// Answer 3.
//getMaxValue라는 함수를 선언하고, 1개의 매개변수(배열 타입)를 지정
function getMaxValue (_arr) {
    var max = _arr[0];
    var maxvalue = 0;
    for(var a  = 0; a < _arr.length; a++){
        //함수에 전달된 매개변수 배열 원소들의 숫자 값들을 비교하여 숫자가 가장 큰 경우
        if(max < _arr[a]){
            //가장 큰 숫자
            max = _arr[a];
            //가장 큰 숫자의 배열 순서
            maxvalue = a;
        }
    }
    return maxvalue;
}

//새로운 변수를 생성, 함수에 매개변수를 지정하여 호출하고 값을 반환
var sum1 = getMaxValue([10, -4, 7, 100, "hello", -50]);
    sum2 = getMaxValue([-400, "world", 60, 0, {}, 1000]);

    //변수의 값을 console에 출력
    console.log(sum1); //3
    console.log(sum2); //5